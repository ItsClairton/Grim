package ac.grim.grimac.checks.impl.exploit;

import ac.grim.grimac.checks.Check;
import ac.grim.grimac.checks.CheckData;
import ac.grim.grimac.checks.type.PacketCheck;
import ac.grim.grimac.player.GrimPlayer;
import com.github.retrooper.packetevents.PacketEvents;
import com.github.retrooper.packetevents.event.PacketReceiveEvent;
import com.github.retrooper.packetevents.manager.server.ServerVersion;
import com.github.retrooper.packetevents.protocol.packettype.PacketType;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientTabComplete;

@CheckData(name = "ExploitB", experimental = true)
public class ExploitA extends Check implements PacketCheck {

    private final boolean supportedVersion = PacketEvents.getAPI().getServerManager().getVersion()
            .isNewerThanOrEquals(ServerVersion.V_1_13);

    public ExploitA(GrimPlayer playerData) {
        super(playerData);
    }

    @Override
    public void onPacketReceive(PacketReceiveEvent event) {
        if (!supportedVersion) {
            return;
        }

        if (event.getPacketType() != PacketType.Play.Client.TAB_COMPLETE) {
            return;
        }

        final var packet = lastWrapper(event,
                WrapperPlayClientTabComplete.class,
                () -> new WrapperPlayClientTabComplete(event));


        final var text = packet.getText();
        if (text.equals("/") || text.trim().isEmpty()) {
            if (flagAndAlert()) {
                event.setCancelled(true);
            }
        }
    }

}
